#!/usr/bin/env groovy
pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
        timeout(time: 1, unit: 'HOURS')
        timestamps()
    }

    tools {
        jdk 'Java JDK 8u221'
        maven 'maven 3.6.3'
        dockerTool 'docker-latest'
    }

    stages {
        stage('Build') {
            steps {
                dir('cv_server') {
                    withMaven(options: [artifactsPublisher(), mavenLinkerPublisher(), dependenciesFingerprintPublisher(disabled: true), jacocoPublisher(disabled: true), junitPublisher(disabled: true)]) {
                        sh "mvn -B -U clean package"
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('cv_server') {
                    script {
                        docker.build('480184259951.dkr.ecr.eu-west-1.amazonaws.com/tile:latest', '--build-arg JAR_FILE=cv_server-0.0.1-SNAPSHOT.jar .')
                    }
//                    sh "docker build --build-arg JAR_FILE=cv_server-0.0.1-SNAPSHOT.jar -t cv-server:latest ."
//                    sh "docker tag cv-server:latest 480184259951.dkr.ecr.eu-west-1.amazonaws.com/tile:latest"
                }
            }
        }

        stage('Deploy in ECS') {
            steps {
                dir('cv_server') {
                    script {
                        sh("eval \$(aws ecr get-login --no-include-email | sed 's|https://||')")
                        docker.withRegistry('http://480184259951.dkr.ecr.eu-west-1.amazonaws.com/tile', 'ecr:eu-west-1:personal-aws-ecr') {
                            docker.image('480184259951.dkr.ecr.eu-west-1.amazonaws.com/tile:latest').push()
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            junit allowEmptyResults: true, testResults: 'cv_server/target/surfire-reports/*.xml'
            publishHTML([allowMissing: true, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'cv_server/target/site/jacoco-ut/', reportFiles: 'index.html', reportName: 'Unit Testing Coverage', reportTitles: 'Unit Testing Coverage'])
            jacoco(execPattern: 'cv_server/target/jacoco-ut.exec')
//            archiveArtifacts artifacts: 'cv_server/target/*.jar', fingerprint: true
            deleteDir()
        }
    }
}
